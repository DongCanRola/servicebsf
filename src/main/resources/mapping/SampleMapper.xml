<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dcan.mapper.SampleMapper" >
  <resultMap id="BaseResultMap" type="cn.dcan.entity.Sample" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="productid" property="productid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="materialcost" property="materialcost" jdbcType="DOUBLE" />
    <result column="processcost" property="processcost" jdbcType="DOUBLE" />
    <result column="humancost" property="humancost" jdbcType="DOUBLE" />
    <result column="user" property="user" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, productid, description, materialcost, processcost, humancost, user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sample
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sample
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.dcan.entity.Sample" >
    insert into sample (id, productid, description, 
      materialcost, processcost, humancost, 
      user)
    values (#{id,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{materialcost,jdbcType=DOUBLE}, #{processcost,jdbcType=DOUBLE}, #{humancost,jdbcType=DOUBLE}, 
      #{user,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" parameterType="cn.dcan.entity.Sample" >
    insert into sample
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productid != null" >
        productid,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="materialcost != null" >
        materialcost,
      </if>
      <if test="processcost != null" >
        processcost,
      </if>
      <if test="humancost != null" >
        humancost,
      </if>
      <if test="user != null" >
        user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="materialcost != null" >
        #{materialcost,jdbcType=DOUBLE},
      </if>
      <if test="processcost != null" >
        #{processcost,jdbcType=DOUBLE},
      </if>
      <if test="humancost != null" >
        #{humancost,jdbcType=DOUBLE},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dcan.entity.Sample" >
    update sample
    <set >
      <if test="productid != null" >
        productid = #{productid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="materialcost != null" >
        materialcost = #{materialcost,jdbcType=DOUBLE},
      </if>
      <if test="processcost != null" >
        processcost = #{processcost,jdbcType=DOUBLE},
      </if>
      <if test="humancost != null" >
        humancost = #{humancost,jdbcType=DOUBLE},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dcan.entity.Sample" >
    update sample
    set productid = #{productid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      materialcost = #{materialcost,jdbcType=DOUBLE},
      processcost = #{processcost,jdbcType=DOUBLE},
      humancost = #{humancost,jdbcType=DOUBLE},
      user = #{user,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByProduct" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sample
    where productid = #{productid,jdbcType=INTEGER}
  </select>
</mapper>