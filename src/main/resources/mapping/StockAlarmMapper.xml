<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dcan.mapper.StockAlarmMapper" >
  <resultMap id="BaseResultMap" type="cn.dcan.entity.StockAlarm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goodsid" property="goodsid" jdbcType="INTEGER" />
    <result column="current" property="current" jdbcType="INTEGER" />
    <result column="required" property="required" jdbcType="INTEGER" />
    <result column="alarmtime" property="alarmtime" jdbcType="TIMESTAMP" />
    <result column="user" property="user" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goodsid, current, required, alarmtime, user, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stockalarm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stockalarm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.dcan.entity.StockAlarm" >
    insert into stockalarm (id, goodsid, current, 
      required, alarmtime, user, 
      state)
    values (#{id,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, #{current,jdbcType=INTEGER}, 
      #{required,jdbcType=INTEGER}, #{alarmtime,jdbcType=TIMESTAMP}, #{user,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.dcan.entity.StockAlarm" >
    insert into stockalarm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsid != null" >
        goodsid,
      </if>
      <if test="current != null" >
        current,
      </if>
      <if test="required != null" >
        required,
      </if>
      <if test="alarmtime != null" >
        alarmtime,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="current != null" >
        #{current,jdbcType=INTEGER},
      </if>
      <if test="required != null" >
        #{required,jdbcType=INTEGER},
      </if>
      <if test="alarmtime != null" >
        #{alarmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dcan.entity.StockAlarm" >
    update stockalarm
    <set >
      <if test="goodsid != null" >
        goodsid = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="current != null" >
        current = #{current,jdbcType=INTEGER},
      </if>
      <if test="required != null" >
        required = #{required,jdbcType=INTEGER},
      </if>
      <if test="alarmtime != null" >
        alarmtime = #{alarmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dcan.entity.StockAlarm" >
    update stockalarm
    set goodsid = #{goodsid,jdbcType=INTEGER},
      current = #{current,jdbcType=INTEGER},
      required = #{required,jdbcType=INTEGER},
      alarmtime = #{alarmtime,jdbcType=TIMESTAMP},
      user = #{user,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>